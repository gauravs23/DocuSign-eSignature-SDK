package net.docusign.api.credential;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.5
 * 2013-07-28T16:45:31.170+05:30
 * Generated source version: 2.7.5
 * 
 */
@WebServiceClient(name = "Credential", 
                  wsdlLocation = "https://demo.docusign.net/api/3.0/credential.asmx?WSDL",
                  targetNamespace = "http://www.docusign.net/API/Credential") 
public class Credential extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.docusign.net/API/Credential", "Credential");
    public final static QName CredentialSoap = new QName("http://www.docusign.net/API/Credential", "CredentialSoap");
    public final static QName CredentialSoap12 = new QName("http://www.docusign.net/API/Credential", "CredentialSoap12");
    static {
        URL url = null;
        try {
            url = new URL("https://demo.docusign.net/api/3.0/credential.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Credential.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "https://demo.docusign.net/api/3.0/credential.asmx?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public Credential(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Credential(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Credential() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns CredentialSoap
     */
    @WebEndpoint(name = "CredentialSoap")
    public CredentialSoap getCredentialSoap() {
        return super.getPort(CredentialSoap, CredentialSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CredentialSoap
     */
    @WebEndpoint(name = "CredentialSoap")
    public CredentialSoap getCredentialSoap(WebServiceFeature... features) {
        return super.getPort(CredentialSoap, CredentialSoap.class, features);
    }
    /**
     *
     * @return
     *     returns CredentialSoap
     */
    @WebEndpoint(name = "CredentialSoap12")
    public CredentialSoap getCredentialSoap12() {
        return super.getPort(CredentialSoap12, CredentialSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CredentialSoap
     */
    @WebEndpoint(name = "CredentialSoap12")
    public CredentialSoap getCredentialSoap12(WebServiceFeature... features) {
        return super.getPort(CredentialSoap12, CredentialSoap.class, features);
    }

}
